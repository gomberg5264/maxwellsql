#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir> <env-dir>

### Configure environment

set -o errexit    # always exit on error
set -o pipefail   # don't ignore exit codes when piping output
set -o nounset    # fail on unset variables
unset GIT_DIR     # Avoid GIT_DIR leak from previous build steps

### Configure directories

BUILD_DIR=${1:-}
CACHE_DIR=${2:-}
ENV_DIR=${3:-}
BP_DIR=$(cd $(dirname ${0:-}); cd ..; pwd)

### Create 

LOG_FILE='/tmp/mysqld-build-log.txt'
echo "" > "$LOG_FILE"

VERSION=mysql-8.0.12-linux-glibc2.12-x86_64


# ------------------------------------------------------------
cd $CACHE_DIR
if [ ! -e "$VERSION" ]; then
  echo '       * Downloading source code'
  curl -# -L -o "/tmp/$VERSION.tar.xz" "https://dev.mysql.com/get/Downloads/MySQL-8.0/$VERSION.tar.xz"

  echo '       * Unpacking'
  tar xJf "/tmp/$VERSION.tar.xz"
  cp "$BP_DIR"/lib/lib*.so* "$VERSION/lib"  
fi
# ------------------------------------------------------------



# ------------------------------------------------------------
echo '       * Installing'
mkdir -p "$BUILD_DIR/.heroku/vendor"
cp -r "$VERSION" "$BUILD_DIR/.heroku/vendor"
# ------------------------------------------------------------



# ------------------------------------------------------------
echo '       * Setup'

cd "$BUILD_DIR/.heroku/vendor/$VERSION"

mkdir -p mysql-files
chmod 750 mysql-files

mkdir -p data
chmod 750 data

LD_LIBRARY_PATH=lib:${LD_LIBRARY_PATH:-} bin/mysqld --initialize-insecure  --datadir=data
LD_LIBRARY_PATH=lib:${LD_LIBRARY_PATH:-} bin/mysql_ssl_rsa_setup --datadir=data
# ------------------------------------------------------------



# ------------------------------------------------------------
echo '       * Starting MySQL Server'
LD_LIBRARY_PATH=lib:${LD_LIBRARY_PATH:-} bin/mysqld_safe --datadir=data &
sleep 5
ps xa
# ------------------------------------------------------------